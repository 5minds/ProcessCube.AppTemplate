name: Build (ProcessCube.AppTemplate â†’ GHCR)

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  CI_TOOLS_VERSION: '^5.0.0'
  IMAGE_NAME: lowcode_apptemplate

jobs:
  get_version:
    name: Prepare Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'

      - name: Install CI Tools
        run: npm i -g @5minds/product_ci_tools@${{ env.CI_TOOLS_VERSION }}

      - name: Prepare Version Infos
        id: get_version
        run: |
          ci_tools prepare-version --allow-dirty-workdir
          echo "VERSION=$(ci_tools get-version)" >> $GITHUB_OUTPUT

    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}

  build_and_push_synology:
    name: Build & Push Synology Image (GHCR)
    runs-on: ubuntu-latest
    needs: [get_version]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Variante B: PAT mit SSO+read:packages (wenn Package in anderer Orga)
      - name: Login to GHCR (PAT)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_TOKEN }} # PAT mit read:packages (und SSO enabled)

      - name: Build & Push (linux/amd64 for Synology)
        uses: docker/build-push-action@v6
        with:
          context: apps/lowcode
          push: true
          platforms: linux/amd64
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.get_version.outputs.VERSION }}
