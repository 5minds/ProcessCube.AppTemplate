services:
  engine:
    image: ghcr.io/5minds/processcube_engine:19.2.1-extensions-2.3.0
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8000:8000
    volumes:
      - ./.processcube/engine/config:/etc/engine/config:ro
      - ./processes:/processes:ro
    environment:
      - CONFIG_PATH=/etc/engine/config/config.json
      - database__dialect=postgres
      - database__host=postgres
      - database__port=5432
      - database__username=postgres
      - database__password=postgres
      - database__database=engine
      - application__name=Engine (ProcessCube.AppTemplate)
    command: --seed-dir=/processes
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 5s
      retries: 10
      timeout: 10s

  authority:
    image: ghcr.io/5minds/processcube_authority:3.2.0
    ports:
      - 11560:11560
    volumes:
      - ./.processcube/authority/config:/etc/authority/config:ro
    environment:
      - UPE_SEED_PATH=/etc/authority/config/upeSeedingData.json
      - database__dialect=postgres
      - database__host=postgres
      - database__port=5432
      - database__username=postgres
      - database__password=postgres
      - database__database=authority

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres/db
    volumes:
      - ./postgres/apptemplate_db.instance:/data/postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      retries: 10
      timeout: 10s
    restart: unless-stopped

  lowcode:
    image: my_customer_lowcode_image:latest
    build:
      context: apps/lowcode
    depends_on:
      engine:
        condition: service_healthy
    ports:
      # node-red port
      - "1880:1880"
      # debugger port
      - 9229:9229
    environment:
      - TZ=Europe/Berlin
      - NODE_ENV=development
      # start node-red with debugger port open
      - NODE_OPTIONS=--inspect=0.0.0.0:9229 --enable-source-maps
      # start node-red with debugger port open and allow all hosts
      #- NODE_OPTIONS=--inspect-brk=0.0.0.0:9229 --enable-source-maps
      - _NODERED_AUTH_DISABLED=true
      - NODERED_AUTH_SKIP_URLS=/swagger-ui,/token,/sample_plugin
      - NODERED_AUTHORITY_URL=http://authority:11560
      - NODERED_AUTH_ADDITIONAL_SCOPES=lanes engine_read engine_write
      - NODERED_CLIENT_ID=NodeRedEditorClient
      - NODERED_CLIENT_SECRET=NodeRedEditorSecret
      - NODERED_DASHBOARD_AUTH_ADDITIONAL_SCOPES=lanes engine_read engine_write
      - NODERED_DASHBOARD_CLIENT_ID=NodeRedDashboardClient
      - NODERED_DASHBOARD_CLIENT_SECRET=NodeRedDashboardSecret
      - NODERED_BASE_URL=http://localhost:1880
      - NODERED_HTTP_STATIC=/data/static/
      - NODERED_CUSTOM_SETTINGS=/lowcode/src/custom_settings.js
      - NODERED_NAME=LowCode Docker
      #- NODERED_THEME=
      - NODERED_PORT=1880
      - ENGINE_URL=http://engine:8000
      - NODE_RED_ETW_HEARTBEAT_LOGGING=true 
      - _NODE_RED_ETW_LONGPOLLING_TIMEOUT=100000
      - PROMETHEUS_COLLECT_DEFAULT_METRICS=true
    volumes:
      - ./apps/lowcode/data:/data
      - ./apps/lowcode:/lowcode
