{
  "id": "5c2bfbb66d2c29f0",
  "type": "function",
  "z": "ca2e23f31a622a1c",
  "name": "find start events",
  "func": "const socketId = msg._client?.socketId || \"\";\nconst cache = global.get(`flownode_cache_${socketId}`) || {};\n\nconst result = [];\n\nconst processTagFieldName = \"Process Tag\";\n\nconst models = msg.payload || [];\n\nmodels.forEach(function(model) {\n\n    if (model && model.isExecutable) {\n\n        let processTag = \"-\";\n\n        if (model.customProperties[processTagFieldName]) {\n            processTag = model.customProperties[processTagFieldName];\n        };\n\n        (model.startEvents ?? []).forEach(function(startEvent) {\n\n            const processModelId = startEvent.processModelId;\n            const flowNodeId = startEvent.id;\n\n            const key = `${processModelId}_${flowNodeId}`;\n            const description = cache[key]?.description || \"\";\n\n            const name = model.processModelName || model.processModelId;\n            const startEventName = startEvent.name || startEvent.id;\n\n            const entry = {\n                \"processTag\": processTag,\n                \"processModelId\": model.processModelId,\n                \"processModelName\": name,\n                \"description\": description,\n                \"startEventId\": startEvent.id,\n                \"startEventName\": startEventName\n            };\n\n            result.push(entry);\n\n        });\n    }\n});\n\nmsg.payload = result;\n\nreturn msg;",
  "outputs": 1,
  "timeout": 0,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "g": "9d369434a5d404a0",
  "wires": [
    [
      "1bcad188983ce141"
    ]
  ]
}