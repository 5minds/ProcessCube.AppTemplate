{
  "id": "4e9e273b329023c8",
  "type": "function",
  "z": "ca2e23f31a622a1c",
  "name": "format fields",
  "func": "function formatDate(date) {\n    // Holen der einzelnen Komponenten des Datums\n    let day = String(date.getDate()).padStart(2, '0');\n    let month = String(date.getMonth() + 1).padStart(2, '0');\n    let year = String(date.getFullYear()); // Nur die letzten zwei Stellen des Jahres\n    let hours = String(date.getHours()).padStart(2, '0');\n    let minutes = String(date.getMinutes()).padStart(2, '0');\n\n    // Formatieren in TT.MM.YY HH:MM\n    return `${day}.${month}.${year} ${hours}:${minutes}`;\n}\n\nconst socketId = msg._client?.socketId || \"\";\nconst cache = global.get(`flownode_cache_${socketId}`) || {};\n\nconst userTasks = msg.payload.userTasks || [];\n\nmsg.payload.userTasks = userTasks.map(userTask => {\n    \n    // startedAt\n    const startedAt = new Date(userTask.startedAt);\n    userTask.startedAtFormatted = formatDate(startedAt);\n    \n    // description\n    const processModelId = userTask.processModelId;\n    const flowNodeId = userTask.flowNodeId;\n\n    const key = `${processModelId}_${flowNodeId}`;\n    const description = cache[key]?.description || \"\";\n    userTask.description = description;\n\n    return userTask;\n});\nreturn msg;",
  "outputs": 1,
  "timeout": 0,
  "noerr": 0,
  "initialize": "",
  "finalize": "",
  "libs": [],
  "g": "967d7bb42c23c704",
  "wires": [
    [
      "9302baba696e53be"
    ]
  ]
}